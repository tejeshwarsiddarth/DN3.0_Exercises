Question: Write a PL/SQL block that loops through all customers, checks their age, and if they are above 60, apply a 1% discount to their current loan interest rates.

DECLARE
    CURSOR customer_cursor IS
        SELECT customer_id, age, loan_interest_rate
        FROM customers
        JOIN loans ON customers.customer_id = loans.customer_id;
        
    v_customer_id customers.customer_id%TYPE;
    v_age customers.age%TYPE;
    v_loan_interest_rate loans.loan_interest_rate%TYPE;
BEGIN
    FOR rec IN customer_cursor LOOP
        v_customer_id := rec.customer_id;
        v_age := rec.age;
        v_loan_interest_rate := rec.loan_interest_rate;
        
        IF v_age > 60 THEN
            UPDATE loans
            SET loan_interest_rate = v_loan_interest_rate - 0.01
            WHERE customer_id = v_customer_id;
        END IF;
    END LOOP;


Question: Write a PL/SQL block that iterates through all customers and sets a flag IsVIP to TRUE for those with a balance over $10,000.

DECLARE
    CURSOR customer_cursor IS
        SELECT customer_id, balance
        FROM customers;
        
    v_customer_id customers.customer_id%TYPE;
    v_balance customers.balance%TYPE;
BEGIN
    FOR rec IN customer_cursor LOOP
        v_customer_id := rec.customer_id;
        v_balance := rec.balance;
        
        IF v_balance > 10000 THEN
            -- Set IsVIP flag to TRUE
            UPDATE customers
            SET is_vip = TRUE
            WHERE customer_id = v_customer_id;
        END IF;
    END LOOP;
    
    COMMIT;
END;


Question: Write a PL/SQL block that fetches all loans due in the next 30 days and prints a reminder message for each customer.

DECLARE
    CURSOR loan_cursor IS
        SELECT customer_id, loan_due_date
        FROM loans
        WHERE loan_due_date BETWEEN SYSDATE AND SYSDATE + INTERVAL '30' DAY;
        
    v_customer_id loans.customer_id%TYPE;
    v_loan_due_date loans.loan_due_date%TYPE;
BEGIN
    FOR rec IN loan_cursor LOOP
        v_customer_id := rec.customer_id;
        v_loan_due_date := rec.loan_due_date;
        
        -- Print reminder message
        DBMS_OUTPUT.PUT_LINE('Reminder: Customer ' || v_customer_id || 
                             ' has a loan due on ' || TO_CHAR(v_loan_due_date, 'YYYY-MM-DD') || '.');
    END LOOP;
END;